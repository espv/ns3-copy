# -*- Mode: python; py-indent-offset: 4; indent-tabs-mode: nil; coding: utf-8; -*-

# def options(opt):
#     pass

# def configure(conf):
#     conf.check_nonfatal(header_name='stdint.h', define_name='HAVE_STDINT_H')

def build(bld):
    module = bld.create_ns3_module('cc2420', ['core','network','mobility','internet', 'wifi', 'message'])
    module.source = [
        'model/cc2420-channel.cc',
        'model/cc2420-net-device.cc',
        'model/cc2420-phy.cc',
        'model/cc2420-fsm.cc',
        'model/cc2420-header.cc',
        'model/cc2420-trailer.cc',
        'model/address-tag.cc',
        'model/crc-tag.cc',
        'model/cripple-tag.cc',
        'model/cc2420-interface-net-device.cc',
        #message
        #'message/cc2420-messages.cc',
        #'message/external-ns3-message.cc',
        #'message/raw-data-message.cc',
        'helper/cc2420-helper.cc',
        #dummy-app
        #'model/dummy-app-client.cc',
        #'model/dummy-app-server.cc',
        #'helper/dummy-app-helper.cc'
        ]

    cc2420_test = bld.create_ns3_module_test_library('cc2420')
    cc2420_test.source = [
        #'test/cc2420-test-suite.cc',
        ]

    headers = bld(features='ns3header')
    headers.module = 'cc2420'
    headers.source = [
    	#model
        'model/cc2420-channel.h',
        'model/cc2420-net-device.h',
        'model/cc2420-phy.h',
        'model/cc2420-fsm.h',
        'model/cc2420-header.h',
        'model/cc2420-trailer.h',
        'model/address-tag.h',
        'model/crc-tag.h',
        'model/cripple-tag.h',
        'model/cc2420-interface-net-device.h',
        #message
        #'message/cc2420-messages.h',
        #'message/external-ns3-message.h',
        #'message/raw-data-message.h',
        'helper/cc2420-helper.h',
        #dummy-app
        #'model/dummy-app-client.h',
        #'model/dummy-app-server.h',
        #'helper/dummy-app-helper.h'
        ]

    if (bld.env['ENABLE_EXAMPLES']):
        bld.recurse('examples')

    # bld.ns3_python_bindings()

