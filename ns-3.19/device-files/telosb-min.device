#
# Lines starting with "#" are regarded as comments, and disregarded during parsing.
#
# The order of sections matter - they must be in the following order:
# QUEUES, HARDWARE, SYNCH, CONDITIONS, TRIGGERS,
# {SIGSTART ... SIGEND},
# THREADS
#

#############################################################################
############################### HEADER ######################################
#############################################################################

QUEUES
# Format: name
#	  queuing policy (only currently supported: "FIFO")
#	  size
#	  type of queued entries ("packet" or "service")
# order matters, since queue conditions work on sets of queues specified
# by the name of the first and the last queue

# BCM4430 TRS: http://linux-sunxi.org/images/0/05/4330-DS206-R.pdf
# Page 84, figure 34
# NIC Rx memory: 10kb
# NIC Tx memory: 32kb

QUEUES

HIRQ	 FIFO 	 -1    services

nic_rx FIFO -1 bytes

h1-h2 FIFO -1 packets
h2-h3 FIFO -1 packets
h3-h4 FIFO -1 packets
h3-bytes FIFO -1 packets
h12-h14 FIFO -1 packets
h11-h12 FIFO -1 packets
h4-rcvd FIFO -1 packets
rcvd-send FIFO -1 packets
send-bytes FIFO -1 packets
ip-bytes FIFO -1 packets
send-senddone FIFO -1 packets
h8-h9 FIFO -1 packets
h9-h10 FIFO -1 packets
etq-etq FIFO -1 packets

send-queue FIFO -1 packets



# Queue for posted tasks
softirq::hi             FIFO   -1   services
softirq::receive        FIFO    -1   services
softirq::send           FIFO    -1   services
softirq::sendDone       FIFO    -1   services
softirq::gotosleep      FIFO    -1 services
softirq::hrtimer        FIFO   -1   services

HARDWARE
# Format: MEMBUS||PEU frequency [name if PEU] [scheduler if PEU] [trace overhead] [callback service queue]
PEU 4 cpu0 ns3::processing::RoundRobinScheduler 250 irq_enter HIRQ

SYNCH
# name type arguments
# type 0 is a semaphore

CONDITIONS

TRIGGERS
LOC startofhirq1 readdonelength
LOC startofhirq2 readdonefcf
LOC startofhirq3 readdonepayload
LOC sendDoneLoc senddonetrigger
LOC startoftask1 receivedone
LOC startoftask2 sendtask
LOC startoftask3 senddone
LOC startofhirq9 readdoneacklength
LOC startofhirq10 readdoneackpayload
LOC endoftaskloop emptytaskloop
#SERVICE sendTask sendtask

# Entrypoint function for the PEU defined above
SIGSTART
NAME irq_enter
PEU cpu
RESOURCES cycles normal
FRACTION 50%  1940 3880

0 START
x                      DEQUEUE		SRVQUEUE 0 HIRQ
0 STOP

SIGEND


SIGSTART
NAME task_loop
PEU cpu
RESOURCES cycles normal
FRACTION 100%  1940 1940

0 LOOPSTART		1 softirq::hi softirq::hrtimer 1
x QUEUECOND softirq::hi softirq::hrtimer notempty
x PROCESS 320 0
0                                 DEQUEUE		SRVQUEUE 0 0
0 RESTART

SIGEND


SIGSTART
NAME task_loop
PEU cpu
RESOURCES cycles normal
FRACTION 100%  1940 1940

0 LOOPSTART		1 softirq::hi softirq::hrtimer 1
x QUEUECOND softirq::hi softirq::hrtimer empty
x PROCESS 300 0
0 RESTART

SIGEND


SIGSTART
NAME scheduler_start
PEU cpu
RESOURCES cycles normal
FRACTION 50%  1940 3880

0 START
x LOOP task_loop 1 softirq::hi softirq::hrtimer 1
0 STOP

SIGEND


SIGSTART
NAME sendDone_task
PEU cpu
RESOURCES cycles normal
FRACTION 20%  1 5

0 START
x                                PROCESS		1100 0
startoftask3 DEQUEUE PKTQUEUE 0 send-senddone
0 STOP

SIGEND


SIGSTART
NAME gotosleep_task
PEU cpu
RESOURCES cycles normal
FRACTION 100% 1 1

0 START
x SLEEP
0 STOP

SIGEND


SIGSTART
NAME HIRQ-12
PEU cpu
RESOURCES cycles normal
FRACTION 100% 1 1

0 START
x                  ENQUEUE		SRVQUEUE gotosleep_task softirq::gotosleep
0 STOP

SIGEND


SIGSTART
NAME HIRQ-11
PEU cpu
RESOURCES cycles normal
FRACTION 100% 1 1

0 START
x TTWAKEUP scheduler
0 STOP

SIGEND


SIGSTART
NAME HIRQ-7
PEU cpu
RESOURCES cycles normal
FRACTION 100% 1 1

0 START
sendDoneTask        COMPL		(TEMP)	global
x                  ENQUEUE		SRVQUEUE sendDone_task softirq::sendDone
x TTWAKEUP scheduler
0 STOP

SIGEND


SIGSTART
NAME HIRQ-81
PEU cpu
RESOURCES cycles normal
FRACTION 49%  1937 3880

0 START
#x                                PROCESS		2776 0
#x PROCESS 1070 0  # The missing cycles
x PROCESS 4440 0 # Combine the two processing stages above
x PROCESS 191 0 PERBYTE send-bytes

middleLayer        TEMPSYNCH	-1 HIRQ-81 1 HIRQ-7	global
x PEUSTART HIRQ-7 5792 0
middleLayer        WAITCOMPL		(TEMP)	global
x PROCESS 5792 0

0 STOP

SIGEND


SIGSTART
NAME sendTask
PEU cpu
RESOURCES cycles normal
FRACTION 49%  1937 3880

0 START
startoftask2 DEQUEUE PKTQUEUE 0 rcvd-send

0 STOP

SIGEND


# Used by sendTask
SIGSTART
NAME HIRQ-6
PEU cpu
RESOURCES cycles normal
FRACTION 100% 1 1

0 START
0                  ENQUEUE		SRVQUEUE sendTask softirq::send
x TTWAKEUP scheduler
x PROCESS 1409 0
0 STOP


# Used by receiveDone_task, is basically an extension to it.
SIGSTART
NAME HIRQ-14
PEU cpu
RESOURCES cycles normal
FRACTION 100% 1 1

0 START
# These two processing stages are technically part of receiveDone_task, but we don't want the dropped packets to run them.
# Split 8836 into 6636 so that 2000 cycles get run before dropping the packet in receiveDone_task SEM
x                                PROCESS        6836 0
x PROCESS 17 0 PERBYTE ip-bytes
x PROCESS 2168 0  # 40-41
x PROCESS 904 0  # 41-38 - Should this be here at all?
0                  ENQUEUE		SRVQUEUE sendTask softirq::send
x TTWAKEUP scheduler
0 STOP


SIGSTART
NAME receiveDone_task
PEU cpu
RESOURCES cycles normal
FRACTION 99%  1939 1940

0 START
x                                PROCESS        2000 0  # Moved From HIRQ-14
startoftask1 DEQUEUE PKTQUEUE 0 h4-rcvd

0 STOP

SIGEND


# The time in between dropping a packet and ending receiveDone_task
SIGSTART
NAME HIRQ-17
PEU cpu
RESOURCES cycles normal
FRACTION 100% 1 1

0 START
x PROCESS 928 0
0 STOP


SIGSTART
NAME hardware_interrupt_4
PEU cpu
RESOURCES cycles normal
FRACTION 100%  1940 1940

0 START
x                                PROCESS		700 0
startofhirq3 DEQUEUE PKTQUEUE 0 h3-h4
x                  ENQUEUE		SRVQUEUE receiveDone_task softirq::receive
x TTWAKEUP scheduler
0 STOP

SIGEND


SIGSTART
NAME HIRQ-4
PEU cpu
RESOURCES cycles normal
FRACTION 100% 1 1

0 START
readDonePayload        COMPL		(TEMP)	global
x CALL hardware_interrupt_4
x TTWAKEUP scheduler
0 STOP

SIGEND


SIGSTART
NAME HIRQ-30
PEU cpu
RESOURCES cycles normal
FRACTION 100% 1 1

0 START
x        COMPL		(TEMP)	global
x        TEMPSYNCH	-1 HIRQ-30 1 HIRQ-4	global
s PEUSTART HIRQ-4 5348 0
x        WAITCOMPL		(TEMP)	global
x PROCESS 5348 0
0 STOP

SIGEND


SIGSTART
NAME hardware_interrupt_3
PEU cpu
RESOURCES cycles normal
FRACTION 100%  1940 1940

0 START
x                                PROCESS		656 0
startofhirq2 DEQUEUE PKTQUEUE 0 h2-h3
x PROCESS 151 0 PERBYTE h3-bytes

x        TEMPSYNCH	-1 hardware_interrupt_3 1 HIRQ-4	global
s PEUSTART HIRQ-4 5348 0
x        WAITCOMPL		(TEMP)	global
x PROCESS 5348 0

#readDonePayload        TEMPSYNCH	-1 hardware_interrupt_3 1 HIRQ-30	global
#s PEUSTART HIRQ-30 151 0 PERBYTE h3-bytes
#readDonePayload        WAITCOMPL		(TEMP)	global
0 STOP

SIGEND


SIGSTART
NAME HIRQ-3
PEU cpu
RESOURCES cycles normal
FRACTION 100% 1 1

0 START
readDoneFcf        COMPL		(TEMP)	global
x CALL hardware_interrupt_3
0 STOP

SIGEND


SIGSTART
NAME hardware_interrupt_2
PEU cpu
RESOURCES cycles normal
FRACTION 100%  1940 1940

0 START
startofhirq1 DEQUEUE PKTQUEUE 0 h1-h2
x                                PROCESS		680 0

readDoneFcf        TEMPSYNCH	-1 hardware_interrupt_2 1 HIRQ-3	global
s PEUSTART HIRQ-3 1352 0
readDoneFcf        WAITCOMPL		(TEMP)	global

x PROCESS 1352 0  # Assuming here that mcu is busy while reading fcf byte into RAM
#x CALL hardware_interrupt_3
0 STOP

SIGEND


SIGSTART
NAME HIRQ-2
PEU cpu
RESOURCES cycles normal
FRACTION 100% 1 1

0 START
readDoneLength     COMPL		(TEMP)	global
x CALL hardware_interrupt_2
0 STOP

SIGEND


SIGSTART
NAME hardware_interrupt_1
PEU cpu
RESOURCES cycles normal
FRACTION 50%  1940 3880

0 START
x                                PROCESS		640 0

readDoneFcf        TEMPSYNCH	-1 hardware_interrupt_1 1 HIRQ-2	global
s PEUSTART HIRQ-2 340 0
readDoneFcf        WAITCOMPL		(TEMP)	global

x PROCESS 340 0  # Assuming here that mcu is busy while reading length byte into RAM
#x CALL hardware_interrupt_2

0 STOP

SIGEND


SIGSTART
NAME HIRQ-1
PEU cpu
RESOURCES cycles normal
FRACTION 100% 1 1

0 START
x CALL hardware_interrupt_1
0 STOP

SIGEND


SIGSTART
NAME main_thread
PEU cpu
RESOURCES cycles normal
FRACTION 100% 1 1

0 START
x CALL scheduler_start
x QUEUECOND softirq::hi softirq::hrtimer empty
x SLEEP
0 STOP

SIGSTART
NAME main_thread
PEU cpu
RESOURCES cycles normal
FRACTION 100% 1 1

0 START
x CALL scheduler_start
x QUEUECOND softirq::hi softirq::hrtimer notempty
0 STOP

SIGEND


THREADS
scheduler main_thread infinite -99
