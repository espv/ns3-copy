#
# Lines starting with "#" are regarded as comments, and disregarded during parsing.
#
# The order of sections matter - they must be in the following order:
# QUEUES, HARDWARE, SYNCH, CONDITIONS, TRIGGERS,
# {SIGSTART ... SIGEND},
# THREADS
#

#############################################################################
############################### HEADER ######################################
#############################################################################

QUEUES
# Format: name
#	  queuing policy (only currently supported: "FIFO")
#	  size
#	  type of queued entries ("packet" or "service")
# order matters, since queue conditions work on sets of queues specified
# by the name of the first and the last queue

# BCM4430 TRS: http://linux-sunxi.org/images/0/05/4330-DS206-R.pdf
# Page 84, figure 34
# NIC Rx memory: 10kb
# NIC Tx memory: 32kb

QUEUES

HIRQ	 FIFO 	 -1    services

h1-h2 FIFO -1 packets
h4-rcvd FIFO -1 packets
rcvd-send FIFO -1 packets
receive-queue FIFO -1 packets
send-senddone FIFO -1 packets

send-queue FIFO -1 packets



# Queue for posted tasks
softirq::tasks             FIFO   -1   services

HARDWARE
# Format: MEMBUS||PEU frequency [name if PEU] [scheduler if PEU] [trace overhead] [callback service queue]
PEU 4 cpu0 ns3::processing::RoundRobinScheduler 250 irq_enter HIRQ

SYNCH
# name type arguments
# type 0 is a semaphore

CONDITIONS

TRIGGERS
LOC startofhirq3 readdonepayload
LOC startoftask1 receivedone
LOC startoftask2 sendtask
LOC startoftask3 senddone

# Entrypoint function for the PEU defined above
SIGSTART
NAME irq_enter
PEU cpu
RESOURCES cycles normal
FRACTION 50%  1940 3880

0 START
x                      DEQUEUE		SRVQUEUE 0 HIRQ
0 STOP

SIGEND


SIGSTART
NAME task_loop
PEU cpu
RESOURCES cycles normal
FRACTION 100%  1940 1940

0 LOOPSTART		0 softirq::tasks softirq::tasks 0
x PROCESS 320 0
0                                 DEQUEUE		SRVQUEUE 0 0
0 RESTART

SIGEND


SIGSTART
NAME sendTask
PEU cpu
RESOURCES cycles normal
FRACTION 49%  1937 3880

0 START
x STATECOND ip-radio-busy read global 0
x QUEUECOND send-queue send-queue empty
0 STOP

SIGEND


SIGSTART
NAME sendTask
PEU cpu
RESOURCES cycles normal
FRACTION 49%  1937 3880

0 START
x STATECOND ip-radio-busy read global 1
0 STOP

SIGEND


# SendDone interrupt
SIGSTART
NAME HIRQ-6
PEU cpu
RESOURCES cycles normal
FRACTION 100% 1 1

0 START
0                  ENQUEUE		SRVQUEUE sendTask softirq::tasks
x TTWAKEUP scheduler
x PROCESS 1409 0
0 STOP


SIGSTART
NAME writtenToTxFifo
PEU cpu
RESOURCES cycles normal
FRACTION 20%  1 5

0 START
x                                PROCESS		1100 0
startoftask3 DEQUEUE PKTQUEUE 0 send-senddone
0 STOP

SIGEND


SIGSTART
NAME sendTask
PEU cpu
RESOURCES cycles normal
FRACTION 49%  1937 3880

0 START
x STATECOND ip-radio-busy read global 0
x QUEUECOND send-queue send-queue notempty
# While sendTask might be delayed until after another packet is sent, the ProgramLocation's packet will be the correct
# one in this case because dequeuing the packet from rcvd-send will set the new curPkt to be the next in line to be sent.
startoftask2 DEQUEUE PKTQUEUE 0 rcvd-send
x PROCESS 4440 0
x PROCESS 191 0 PERBYTE

x PROCESS 5792 0
x                  ENQUEUE		SRVQUEUE writtenToTxFifo softirq::tasks
x TTWAKEUP scheduler
0 STOP

SIGEND


SIGSTART
NAME read-packets-in-rxfifo   # The other signature is further down in this file
PEU cpu
RESOURCES cycles normal
FRACTION 99%  1939 1940

0 START
x QUEUECOND receive-queue receive-queue empty
0 STOP

SIGEND


SIGSTART
NAME receiveDone_task
PEU cpu
RESOURCES cycles normal
FRACTION 99%  1939 1940

0 START
x                                PROCESS        2000 0
startoftask1 DEQUEUE PKTQUEUE 0 h4-rcvd
x STATECOND ipaq-full read global 0
x                                PROCESS        6836 0
x PROCESS 17 0 PERBYTE
x PROCESS 3072 0  # 40-41 + 41-38
0                  ENQUEUE		SRVQUEUE sendTask softirq::tasks
x TTWAKEUP scheduler
x CALL read-packets-in-rxfifo
0 STOP

SIGEND


SIGSTART
NAME receiveDone_task
PEU cpu
RESOURCES cycles normal
FRACTION 99%  1939 1940

0 START
x                                PROCESS        2000 0
startoftask1 DEQUEUE PKTQUEUE 0 h4-rcvd
x STATECOND ipaq-full read global 1
x PROCESS 928 0
x CALL read-packets-in-rxfifo
0 STOP

SIGEND


SIGSTART
NAME check-if-packet-collided
PEU cpu
RESOURCES cycles normal
FRACTION 100%  1940 1940

0 START
x STATECOND packet-collided read global 0
x                  ENQUEUE		SRVQUEUE receiveDone_task softirq::tasks
x TTWAKEUP scheduler
0 STOP

SIGEND


SIGSTART
NAME check-if-packet-collided
PEU cpu
RESOURCES cycles normal
FRACTION 100%  1940 1940

0 START
x STATECOND packet-collided read global 1
x CALL read-packets-in-rxfifo
0 STOP

SIGEND


SIGSTART
NAME read-packet-into-RAM
PEU cpu
RESOURCES cycles normal
FRACTION 50%  1940 3880

0 START
x PROCESS 3028 0
x PROCESS 151 0 PERBYTE
x PROCESS 6048 0
x DEQUEUE PKTQUEUE 0 receive-queue
startofhirq3 CALL check-if-packet-collided
0 STOP

SIGEND


SIGSTART
NAME HIRQ-1
PEU cpu
RESOURCES cycles normal
FRACTION 100% 1 1

0 START
x CALL read-packet-into-RAM
0 STOP

SIGEND


SIGSTART
NAME read-packets-in-rxfifo  # The other signature is further up in this file
PEU cpu
RESOURCES cycles normal
FRACTION 99%  1939 1940

0 START
x QUEUECOND receive-queue receive-queue notempty
x CALL read-packet-into-RAM
0 STOP

SIGEND


SIGSTART
NAME main_thread
PEU cpu
RESOURCES cycles normal
FRACTION 100% 1 1

0 START
x QUEUECOND softirq::tasks softirq::tasks empty
x SLEEPTHREAD
0 STOP

SIGEND


SIGSTART
NAME main_thread
PEU cpu
RESOURCES cycles normal
FRACTION 100% 1 1

0 START
x QUEUECOND softirq::tasks softirq::tasks notempty
x LOOP task_loop 0 softirq::tasks softirq::tasks 0
0 STOP

SIGEND


THREADS
scheduler main_thread infinite 0
